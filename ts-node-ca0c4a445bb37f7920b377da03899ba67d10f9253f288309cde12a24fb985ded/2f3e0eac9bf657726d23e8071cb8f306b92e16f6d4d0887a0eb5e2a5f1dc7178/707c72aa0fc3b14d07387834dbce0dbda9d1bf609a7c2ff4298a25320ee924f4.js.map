{"version":3,"file":"/home/elvis/git/newbles-client/server/authentication/index.ts","sources":["/home/elvis/git/newbles-client/server/authentication/index.ts"],"names":[],"mappings":"AAAA,CAAC,UAAC,MAAM;IACJ,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;IACnC,IAAM,GAAG,GAAG,OAAO,EAAE,CAAC;IAEtB,IAAI,OAAO,GAAG,UAAC,GAAG;QACd,IAAI,IAAI,GAAG;YACP,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAClD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAClD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;YAClD,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;SACrD,CAAA;QACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,IAAI,aAAa,GAAG,UAAC,GAAG;QACpB,MAAM,CAAC,kBAAkB,KAAK,GAAG,CAAC;IACtC,CAAC,CAAC;IAEF,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,UAAC,GAAG,EAAE,GAAG;QACjC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,0FAA0F,CAAC,CAAC;QAClH,GAAG;aACE,IAAI,CAAC;YACF,SAAS,EAAE,IAAI;YACf,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;SACvD,CAAC,CAAC;IACX,CAAC,CAAC,CAAA;IAEF,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,UAAC,GAAG,EAAE,GAAG;QAC/B,IAAI,IAAI,GAAG;YACP,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;SAC/B,CAAC;QACF,EAAE,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YACrC,GAAG;iBACE,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,GAAG;iBACE,MAAM,CAAC,GAAG,CAAC;iBACX,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC;AACzB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC","sourcesContent":["((module) => {\n    const express = require('express');\n    const app = express();\n\n    let getKeys = (pos) => {\n        let keys = [\n            ['4', '6', '1', '5', '8', '0', '2', '3', '9', '7'],\n            ['1', '5', '2', '8', '3', '0', '4', '6', '7', '9'],\n            ['2', '3', '1', '4', '8', '9', '7', '5', '0', '6'],\n            ['3', '1', '0', '8', '7', '2', '5', '9', '6', '4']\n        ]\n        return keys[pos];\n    };\n\n    let isInvalidCard = (key) => {\n        return '4557000000000000' === key;\n    };\n\n    app.get('/keyboard/random', (req, res) => {\n        res.set('X-KEYBOARD', 'z4PhNX7vuL3xVChQ1m2AB9Yg5AULVxXcg/SpIdNs6c5H0NE8XYXysP+DGNKHfuwvY7kxvUdBeoGlODJ6+SfaPg==');\n        res\n            .json({\n                'success': true,\n                'errors': [],\n                'response': getKeys(Math.floor((Math.random() * 4)))\n            });\n    })\n\n    app.post('/authenticate', (req, res) => {\n        let data = {\n            response: { name: 'Benito' }\n        };\n        if (isInvalidCard(req.body.cardNumber)) {\n            res\n                .status(500)\n                .json(data);\n        } else {\n            res\n                .status(200)\n                .json(data);\n        }\n    });\n\n    module.exports = app;\n})(module);\n"]}